AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: PlatinumEnoch Infrastructure (S3, Lambda@Edge, DynamoDB)
Parameters:
  CacheHash:
    Type: String
    Default: <CacheHash>
    Description: Work-around to bust Lambda@Edge Caching so this stack can be redeployed much faster
  DomainName:
    Type: String
    Default: <DomainName>
  Environment:
    Type: String
    Default: dev
    AllowedValues: [prod, dev, avery]
  TemplatesBucketName:
    Type: String
    Default: <TemplatesBucketName>
Resources:
  #S3
  PlatinumEnochS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub ${Environment}-platinumenoch
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
  PlatinumEnochS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PlatinumEnochS3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Sid: AddPerm
          Effect: Allow
          Principal: '*'
          Action:
          - s3:GetObject
          - s3:PutObject
          Resource:
          - !Sub "arn:aws:s3:::${Environment}-platinumenoch/*"
          Condition:
            StringLike:
              aws:Referer:
                # S3 will give a 403 on it's bucket endpoints. It will only return a 200 PlatinumEnochCDN passes in this designated url.
                - !Sub "https://${DomainName}/*"
  PlatinumEnochMediaS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub ${Environment}-platinumenoch-media
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins:
            - !Sub "https://${DomainName}/*"
            AllowedMethods:
            - GET
            - PUT
            - DELETE
            - HEAD
            AllowedHeaders:
            - "Content-Type"
  PlatinumEnochMediaS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PlatinumEnochMediaS3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Sid: AllowPublicRead
          Effect: Allow
          Principal: '*'
          Action:
          - s3:GetObject
          - s3:PutObject
          - s3:PutObjectAcl # without this permission, the presignedurl invoked in PlatinumEnoch responds with a 403 error https://github.com/aws/aws-cli/issues/813#issuecomment-46174965
          - s3:DeleteObject
          Resource:
          - !Sub "arn:aws:s3:::${Environment}-platinumenoch-media/*"
    DependsOn: PlatinumEnochMediaS3Bucket
  #Lambda@Edge
  PlatinumEnochBasicAuthLambdaEdge:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-PlatinumEnochBasicAuthLambdaEdge-${CacheHash}
      Runtime: nodejs10.x
      Handler: index.handler
      CodeUri:
        Bucket: !Ref TemplatesBucketName
        Key: platinumenoch-lambda-edge/lambda.zip
      MemorySize: 128
      Timeout: 5
      # More info at https://github.com/awslabs/serverless-application-model/blob/master/docs/safe_lambda_deployments.rst
      AutoPublishAlias: live
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "edgelambda.amazonaws.com"
      Policies:
        - AmazonDynamoDBFullAccess
  PlatinumEnochBasicAuthTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: partitionKey
          KeyType: HASH
        - AttributeName: authUser
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: partitionKey
          AttributeType: S
        - AttributeName: authUser
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: !Sub "${Environment}-PlatinumEnochBasicAuthTable"
Outputs:
  PlatinumEnochS3BucketName:
    Value: !Ref PlatinumEnochS3Bucket
    Description: Name of S3 bucket to hold PlatinumEnoch files
  PlatinumEnochS3BucketWebsiteUrl:
    Value: !GetAtt PlatinumEnochS3Bucket.WebsiteURL
    Description: The S3 bucket url
  PlatinumEnochMediaS3BucketName:
    Value: !Ref PlatinumEnochMediaS3Bucket
    Description: Name of S3 bucket to hold PlatinumEnoch files
  PlatinumEnochMediaS3BucketWebsiteUrl:
    Value: !GetAtt PlatinumEnochMediaS3Bucket.WebsiteURL
    Description: The S3 bucket url
  PlatinumEnochBasicAuthLambdaEdgeVersion: 
    Description: PlatinumEnochBasicAuthLambdaEdge Version
    Value: !Ref PlatinumEnochBasicAuthLambdaEdge.Version